""" Collision Checker takes the lattice graphs generated by Lattice Generator and modifies it 
based on the predicted subject path from Subject Predictor and the CARLA road environment. """
from carla import *
import numpy as np
import math

class CollisionChecker:
    def __init__(self):

        self.lattice_graph = None
        self.subject_path = None
    
    def predict_collision(self, ego, subject):
        collide = false
        for ego_pos in self.lattice_graph:
            for sub_pos in self.subject_path:
                collide = check_collision(ego, subject, ego_pos, sub_pos)
        
        return collide

    def check_collision(self, ego, sub, ego_pos, sub_pos):
        ego_rad = max(ego.bounding_box.extent.x, ego.bounding_box.extent.y)
        sub_rad = max(sub.bounding_box.extent.x, sub.bounding_box.extent.y)
        center_dist = math.sqrt(pow(ego_pos[0] - sub_pos[0], 2) + pow(ego_pos[1] - sub_pos[1], 2))
        return center_dist <= ego_rad + sub_rad

    def update_lattice(self, lattice_graph):
        self.lattice_graph = lattice_graph

    def update_subject_path(self, subject_path):
        self.subject_path = subject_path

    def assign_cost(self):
        pass
